import requests
import json
import time
import os
import re
from datetime import datetime, timedelta
from flask import Flask
from threading import Thread
import schedule

app = Flask(__name__)

print("üéå TOKIO SUSHI PREMIUM BOT yuklanmoqda...")

# Sozlamalar
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8132196767:AAFcTMKbjP6CEsigfR-SJ-sdxbVwH2AsxSM")
BASE_URL = f"https://api.telegram.org/bot{BOT_TOKEN}/"
ADMIN_ID = "7548105589"
DELIVERY_PRICE = 10000
WORK_HOURS = "11:00 - 02:00"
PREPARATION_TIME = "30-45 daqiqa"
DISCOUNT_PERCENT = 20  # 20% chegirma

# Karta ma'lumotlari
CARD_NUMBER = "9860 3501 4052 5865"
CARD_HOLDER = "SHOKHRUKH Y."

# TO'LIQ MENYU MA'LUMOTLARI - RUS TILIDA VA RASMLAR BILAN
menu_data = {
    "holodnye_rolly": {
        "name": "üç£ –•–û–õ–û–î–ù–´–ï –†–û–õ–õ–´",
        "emoji": "üç£",
        "products": [
            {"id": 1, "name": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –ì–æ–ª–¥", "price": 120000, "description": "–°—ã—Ä.–õ–æ—Å–æ—Å—å.–û–≥—É—Ä–µ—Ü.–£–≥–æ—Ä—å.–£–Ω–∞–≥–∏ —Å–æ—É—Å.–¢—É–Ω–µ—Ü.–ö—É–Ω–∂—É—Ç.–ú–∞—Å—Å–∞–≥–æ –∏–∫—Ä–∞", "prep_time": "20 daqiqa", "image": "https://example.com/images/filadelfiya_gold.jpg"},
            {"id": 2, "name": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è (–¢—É–Ω–µ—Ü)", "price": 90000, "description": "–°—ã—Ä.–¢—É–Ω–µ—Ü", "prep_time": "15 daqiqa", "image": "https://example.com/images/filadelfiya_tunets.jpg"},
            {"id": 3, "name": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –ö–ª–∞—Å—Å–∏–∫", "price": 80000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü—ã.–õ–æ—Å–æ—Å—å", "prep_time": "12 daqiqa", "image": "https://example.com/images/filadelfiya_classic.jpg"},
            {"id": 4, "name": "–≠–±–∏ –ì–æ–ª–¥", "price": 110000, "description": "–°—ã—Ä.–õ–æ—Å–æ—Å—å.–ö—Ä–µ–≤–µ—Ç–∫–∏ –≤ –∫–ª—è—Ä–µ.–û–≥—É—Ä–µ—Ü.–õ—É–∫", "prep_time": "18 daqiqa", "image": "https://example.com/images/ebi_gold.jpg"},
            {"id": 5, "name": "–õ–æ—Å–æ—Å—å (–≥—Ä–∏–ª—å)", "price": 93000, "description": "–°—ã—Ä.–£–Ω–∞–≥–∏ —Å–æ—É—Å.–õ–æ—Å–æ—Å—å.–ú–∞—Å—Å–∞–≥–æ", "prep_time": "15 daqiqa", "image": "https://example.com/images/losos_grill.jpg"},
            {"id": 6, "name": "–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏", "price": 80000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–ö—Ä–µ–≤–µ—Ç–∫–∏ —Ç–∏–≥—Ä–æ–≤—ã–µ.–ú–∞—Å—Å–∞–≥–æ –∫—Ä–∞—Å—Å", "prep_time": "12 daqiqa", "image": "https://example.com/images/california_krevetka.jpg"},
            {"id": 7, "name": "–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å –ª–æ—Å–æ—Å–µ–º", "price": 76000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–õ–æ—Å–æ—Å—å.–ú–∞—Å—Å–∞–≥–æ –∫—Ä–∞—Å—Å", "prep_time": "12 daqiqa", "image": "https://example.com/images/california_losos.jpg"},
            {"id": 8, "name": "–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å –∫—Ä–∞–±–æ–º", "price": 70000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–°–Ω–µ–∂–Ω—ã–π –∫—Ä–∞–±.–ú–∞—Å—Å–∞–≥–æ –∫—Ä–∞—Å–Ω—ã–π", "prep_time": "12 daqiqa", "image": "https://example.com/images/california_krab.jpg"},
            {"id": 9, "name": "–†–æ–ª–ª –û–≥—É—Ä–µ—Ü", "price": 65000, "description": "–°—ã—Ä.–°—Ç—Ä—É–∂–∫–∞ —Ç—É–Ω—Ü–∞.–û–≥—É—Ä–µ—Ü", "prep_time": "10 daqiqa", "image": "https://example.com/images/roll_ogurec.jpg"},
            {"id": 91, "name": "–†–æ–ª–ª –≤ –ö—É–Ω–∂—É—Ç–µ", "price": 50000, "description": "–°—ã—Ä.–ö—É–Ω–∂—É—Ç.–ö—Ä–∞–±", "prep_time": "15 daqiqa", "image": "https://example.com/images/roll_kunjut.jpg"},
            {"id": 92, "name": "–î—Ä–∞–∫–æ–Ω", "price": 75000, "description": "–°—ã—Ä.–£–≥–æ—Ä—å.–û–≥—É—Ä–µ—Ü", "prep_time": "15 daqiqa", "image": "https://example.com/images/drakon.jpg"},
            {"id": 93, "name": "–ö–∞–Ω–∞–¥–∞ GOLD", "price": 85000, "description": "–°—ã—Ä.–õ–æ—Å–æ—Å—å.–û–≥—É—Ä–µ—Ü.–£–≥–æ—Ä—å.–£–Ω–∞–≥–∏ —Å–æ—É—Å.–ö—É–Ω–∂—É—Ç", "prep_time": "20 daqiqa", "image": "https://example.com/images/kanada_gold.jpg"}
        ]
    },
    "zapechennye": {
        "name": "üî• –ó–ê–ü–ï–ß–ï–ù–ù–´–ï",
        "emoji": "üî•",
        "products": [
            {"id": 10, "name": "–†–æ–ª–ª –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –°—Ç–µ–π–∫", "price": 95000, "description": "–°—ã—Ä.–ª–æ—Å–æ—Å—å.–æ–≥—É—Ä–µ—Ü.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞", "prep_time": "18 daqiqa", "image": "https://example.com/images/roll_filadelfiya_steak.jpg"},
            {"id": 11, "name": "–†–æ–ª–ª —Å –∫—Ä–µ–≤–µ—Ç–∫–æ–π", "price": 80000, "description": "–°—ã—Ä.–¢–∏–≥—Ä–æ–≤—ã–µ –∫—Ä–µ–≤–µ—Ç–∫–∏.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞.–û–≥—É—Ä–µ—Ü.–∫—É–Ω–∂—É—Ç", "prep_time": "16 daqiqa", "image": "https://example.com/images/roll_krevetka.jpg"},
            {"id": 12, "name": "–†–æ–ª–ª —Å —É–≥—Ä–µ–º", "price": 80000, "description": "–°—ã—Ä.–æ–≥—É—Ä–µ—Ü—ã.–∫—É–Ω–∂—É—Ç.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞.—É–≥–æ—Ä—å", "prep_time": "16 daqiqa", "image": "https://example.com/images/roll_ugor.jpg"},
            {"id": 13, "name": "–†–æ–ª–ª —Å –∫—Ä–∞–±–æ–º", "price": 66000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–°–Ω–µ–∂–Ω—ã–π –∫—Ä–∞–±", "prep_time": "14 daqiqa", "image": "https://example.com/images/roll_krab.jpg"},
            {"id": 14, "name": "–†–æ–ª–ª —Å –ª–æ—Å–æ—Å–µ–º", "price": 77000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü—ã.–∫—É–Ω–∂—É—Ç,—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞,–ª–æ—Å–æ—Å—å,—É–Ω–∞–≥–∏ —Å–æ—É—Å", "prep_time": "15 daqiqa", "image": "https://example.com/images/roll_losos.jpg"},
            {"id": 15, "name": "–†–æ–ª–ª –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è", "price": 70000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü—ã.—Å–Ω–µ–∂–Ω—ã–π –∫—Ä–∞–±.–∏–∫—Ä–∞ –º–∞—Å—Å–∞–≥–æ.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞.—É–Ω–∞–≥–∏ —Å–æ—É—Å", "prep_time": "14 daqiqa", "image": "https://example.com/images/roll_california.jpg"},
            {"id": 16, "name": "–†–æ–ª–ª —Å –∫—É—Ä–∏—Ü–µ–π", "price": 55000, "description": "–ú–∞–π–æ–Ω–µ–∑.–°–∞–ª–∞—Ç –ê–π–∑–±–µ—Ä–≥.–∫—É—Ä–∏—Ü–∞.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞", "prep_time": "12 daqiqa", "image": "https://example.com/images/roll_kurica.jpg"},
            {"id": 94, "name": "–õ–æ—Å–æ—Å—å", "price": 66000, "description": "–õ–æ—Å–æ—Å—å, –ö—É–Ω–∂—É—Ç", "prep_time": "15 daqiqa", "image": "https://example.com/images/losos.jpg"},
            {"id": 95, "name": "–¢–µ–º–ø—É—Ä–∞ —Å –∫—Ä–∞–±–æ–º", "price": 55000, "description": "–ö—Ä–∞–±.–ú–æ–π–æ–Ω–µ–∑.–£–Ω–∞–≥–∏ —Å–æ—É—Å", "prep_time": "15 daqiqa", "image": "https://example.com/images/tempura_krab.jpg"},
            {"id": 96, "name": "–ö—Ä–µ–≤–µ—Ç–∫–∏", "price": 70000, "description": "–ö—Ä–µ–≤–µ—Ç–∫–∏, —Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞", "prep_time": "15 daqiqa", "image": "https://example.com/images/krevetki.jpg"},
            {"id": 97, "name": "–¢–µ–º–ø—É—Ä–∞ –∑–∞–ø–µ—á–µ–Ω–Ω—ã–π", "price": 70000, "description": "–°—ã—Ä.–ö—Ä–∞–±.–û–≥—É—Ä–µ—Ü", "prep_time": "15 daqiqa", "image": "https://example.com/images/tempura_zapechenny.jpg"}
        ]
    },
    # ... qolgan kategoriyalar ham shu tartibda to'ldiriladi
    # Bu yerda faqat bir kategoriya ko'rsatilgan, qolganlari ham xuddi shunday
}

# Ma'lumotlar bazasi
user_data = {}
orders_data = {}
order_counter = 1

# ==================== YANGI FUNKSIYALAR ====================

def send_photo(chat_id, photo_url, caption=None, keyboard=None):
    """Rasm yuborish"""
    try:
        url = BASE_URL + "sendPhoto"
        data = {
            "chat_id": chat_id,
            "photo": photo_url
        }
        if caption:
            data["caption"] = caption
            data["parse_mode"] = "HTML"
        if keyboard:
            data["reply_markup"] = json.dumps(keyboard)
        
        response = requests.post(url, json=data, timeout=10)
        return response.status_code == 200
    except Exception as e:
        print(f"Rasm yuborishda xato: {e}")
        return False

def show_product_with_image(chat_id, product_id):
    """Mahsulotni rasm bilan ko'rsatish"""
    product = None
    category_name = ""
    cat_key = ""
    
    # Mahsulotni qidirish
    for category_key, category in menu_data.items():
        for p in category["products"]:
            if p["id"] == product_id:
                product = p
                category_name = category["name"]
                cat_key = category_key
                break
        if product:
            break
    
    if not product:
        send_message(chat_id, "‚ùå Mahsulot topilmadi")
        return
    
    # Matn tayyorlash
    caption = f"""
üì∏ <b>{product['name']}</b>

üí∞ <b>Narxi:</b> {product['price']:,} so'm
‚è±Ô∏è <b>Tayyorlanish vaqti:</b> {product['prep_time']}
üìù <b>Tarkibi:</b> {product['description']}
üè∑Ô∏è <b>Kategoriya:</b> {category_name}

üéÅ <b>Har bir buyurtmada {DISCOUNT_PERCENT}% chegirma!</b>
    """
    
    # Keyboard tayyorlash
    keyboard = {
        "inline_keyboard": [
            [{"text": "üõí Savatga qo'shish", "callback_data": f"add_{product_id}"}],
            [{"text": "üìã Kategoriyaga qaytish", "callback_data": f"category_{cat_key}"}],
            [{"text": "üçΩ Bosh menyu", "callback_data": "show_menu"}]
        ]
    }
    
    # Rasm mavjud bo'lsa, rasm bilan yuborish
    if product.get('image'):
        send_photo(chat_id, product['image'], caption, keyboard)
    else:
        # Rasm bo'lmasa, oddiy xabar
        send_message(chat_id, caption, keyboard)

# ==================== MAVJUD FUNKSIYALAR YANGILANDI ====================

def get_uzbekistan_time():
    """O'zbekiston vaqtini olish"""
    return datetime.utcnow() + timedelta(hours=5)

def send_message(chat_id, text, keyboard=None):
    """Xabar yuborish"""
    try:
        url = BASE_URL + "sendMessage"
        data = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": "HTML",
            "disable_web_page_preview": True
        }
        if keyboard:
            data["reply_markup"] = json.dumps(keyboard)
        response = requests.post(url, json=data, timeout=10)
        return response.status_code == 200
    except Exception as e:
        print(f"Xabar yuborishda xato: {e}")
        return False

def main_menu(chat_id):
    """Asosiy menyu"""
    if str(chat_id) == ADMIN_ID:
        keyboard = {
            "keyboard": [
                ["üçΩ Mazali Menyu", "üõí Savat"],
                ["üì¶ Mening buyurtmalarim", "‚ÑπÔ∏è Ma'lumot"],
                ["üëë Admin Panel"]
            ],
            "resize_keyboard": True
        }
    else:
        keyboard = {
            "keyboard": [
                ["üçΩ Mazali Menyu", "üõí Savat"],
                ["üì¶ Mening buyurtmalarim", "‚ÑπÔ∏è Ma'lumot"]
            ],
            "resize_keyboard": True
        }
    return keyboard

def show_full_menu(chat_id):
    """MAZALI MENYU - RUS TILIDA"""
    text = f"""
üéå <b>TOKIO SUSHI - –ú–ê–ó–ê–õ–ò –ú–ï–ù–Æ</b> üç±

üéé <b><i>–°—É—à–∏ - —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å—å–µ—Å—Ç—å!</i></b>

‚≠ê <b>8 –∫–∞—Ç–µ–≥–æ—Ä–∏–π, 98 –ø—Ä–µ–º–∏—É–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤</b>
üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> {DELIVERY_PRICE:,} —Å—É–º
‚è∞ <b>–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:</b> {PREPARATION_TIME}
üïí <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> {WORK_HOURS}
üéÅ <b>–°–ö–ò–î–ö–ê {DISCOUNT_PERCENT}% –ù–ê –ö–ê–ñ–î–´–ô –ó–ê–ö–ê–ó!</b>

<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:</b>
"""
    
    keyboard = {
        "inline_keyboard": [
            [{"text": "üç£ –•–û–õ–û–î–ù–´–ï –†–û–õ–õ–´", "callback_data": "category_holodnye_rolly"}],
            [{"text": "üî• –ó–ê–ü–ï–ß–ï–ù–ù–´–ï", "callback_data": "category_zapechennye"}],
            [{"text": "‚ö° –ñ–ê–†–ï–ù–´–ï –†–û–õ–õ–´", "callback_data": "category_jarennye_rolly"}],
            [{"text": "üéé –°–ï–¢–´", "callback_data": "category_sety"}],
            [{"text": "üç± –°–£–®–ò –ò –ì–£–ù–ö–ê–ù", "callback_data": "category_sushi_gunkan"}],
            [{"text": "üçú –ì–û–†–Ø–ß–ê–Ø –ï–î–ê", "callback_data": "category_goryachaya_eda"}],
            [{"text": "üçï –ü–ò–¶–¶–ê –ò –ë–£–†–ì–ï–†", "callback_data": "category_pizza_burger"}],
            [{"text": "ü•§ –ù–ê–ü–ò–¢–ö–ò", "callback_data": "category_napitki"}],
            [{"text": "üõí –ö–æ—Ä–∑–∏–Ω–∞", "callback_data": "view_cart"}],
            [{"text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "main_menu"}]
        ]
    }
    
    send_message(chat_id, text, keyboard)

def show_category(chat_id, category_key):
    """Kategoriyani ko'rsatish - ENDI RASM KO'RSATISH TUGMASI BILAN"""
    category = menu_data[category_key]
    text = f"<b>{category['emoji']} {category['name']}</b>\n\n"
    text += "üì∏ <i>Har bir mahsulotni rasmini ko'rish uchun 'Rasmni ko\'rish' tugmasini bosing</i>\n\n"
    
    for product in category["products"]:
        text += f"<b>üç£ {product['name']}</b>\n"
        text += f"<b>üí∞ {product['price']:,} —Å—É–º</b>\n"
        text += f"‚è±Ô∏è {product['prep_time']}\n\n"
    
    keyboard = {"inline_keyboard": []}
    
    # Mahsulotlar uchun tugmalar - Rasm ko'rish va qo'shish
    for product in category["products"]:
        keyboard["inline_keyboard"].append([
            {
                "text": f"üì∏ {product['name']}",
                "callback_data": f"show_{product['id']}"
            },
            {
                "text": f"üõí Qo'shish",
                "callback_data": f"add_{product['id']}"
            }
        ])
    
    # Navigatsiya tugmalari
    keyboard["inline_keyboard"].extend([
        [{"text": "üõí –ö–æ—Ä–∑–∏–Ω–∞", "callback_data": "view_cart"}],
        [{"text": "üìã –ü–æ–ª–Ω–æ–µ –º–µ–Ω—é", "callback_data": "show_menu"}],
        [{"text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "main_menu"}]
    ])
    
    send_message(chat_id, text, keyboard)

def add_to_cart(chat_id, product_id):
    """Mahsulotni savatga qo'shish"""
    # Mahsulotni topish
    product = None
    for category in menu_data.values():
        for p in category["products"]:
            if p["id"] == product_id:
                product = p
                break
        if product:
            break
    
    if not product:
        send_message(chat_id, "‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # Foydalanuvchi ma'lumotlarini tekshirish
    if chat_id not in user_data:
        user_data[chat_id] = {"cart": []}
    
    if "cart" not in user_data[chat_id]:
        user_data[chat_id]["cart"] = []
    
    # Savatga qo'shish
    user_data[chat_id]["cart"].append(product)
    
    text = f"""
‚úÖ <b>–î–û–ë–ê–í–õ–ï–ù–û –í –ö–û–†–ó–ò–ù–£</b>

üç£ {product['name']}
üí∞ –¶–µ–Ω–∞: {product['price']:,} —Å—É–º
‚è±Ô∏è –ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ: {product['prep_time']}

üõí –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: {len(user_data[chat_id]['cart'])} —à—Ç
    """
    
    keyboard = {
        "inline_keyboard": [
            [{"text": "üõí –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ä–∑–∏–Ω—É", "callback_data": "view_cart"}],
            [{"text": "üìã –ú–µ–Ω—é", "callback_data": "show_menu"}],
            [{"text": "‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", "callback_data": "place_order"}]
        ]
    }
    
    send_message(chat_id, text, keyboard)

def show_cart(chat_id):
    """Savatni ko'rsatish"""
    if chat_id not in user_data or "cart" not in user_data[chat_id] or not user_data[chat_id]["cart"]:
        send_message(chat_id, "üõí <b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ –º–µ–Ω—é!")
        return
    
    cart = user_data[chat_id]["cart"]
    total = sum(item['price'] for item in cart)
    
    # 20% chegirma hisoblash
    discount_amount = total * DISCOUNT_PERCENT // 100
    total_with_discount = total - discount_amount
    total_with_delivery = total_with_discount + DELIVERY_PRICE
    
    text = "üõí <b>–í–ê–®–ê –ö–û–†–ó–ò–ù–ê</b>\n\n"
    for i, item in enumerate(cart, 1):
        text += f"{i}. {item['name']} - {item['price']:,} —Å—É–º\n"
    
    text += f"\nüíµ –¢–æ–≤–∞—Ä—ã: {total:,} —Å—É–º"
    text += f"\nüéÅ –°–∫–∏–¥–∫–∞ ({DISCOUNT_PERCENT}%): -{discount_amount:,} —Å—É–º"
    text += f"\nüí≥ –°–æ —Å–∫–∏–¥–∫–æ–π: {total_with_discount:,} —Å—É–º"
    text += f"\nüöö –î–æ—Å—Ç–∞–≤–∫–∞: {DELIVERY_PRICE:,} —Å—É–º"
    text += f"\nüí∞ <b>–ò–¢–û–ì–û: {total_with_delivery:,} —Å—É–º</b>"
    text += f"\n‚è∞ –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {PREPARATION_TIME}"
    
    keyboard = {
        "inline_keyboard": [
            [{"text": "‚úÖ –û–§–û–†–ú–ò–¢–¨ –ó–ê–ö–ê–ó", "callback_data": "place_order"}],
            [{"text": "üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω–∞", "callback_data": "clear_cart"}],
            [{"text": "üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é", "callback_data": "show_menu"}],
            [{"text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "main_menu"}]
        ]
    }
    
    send_message(chat_id, text, keyboard)

def handle_callback(chat_id, callback_data):
    """Callbacklarni qayta ishlash - YANGI: show_ HANDLER QO'SHILDI"""
    try:
        if callback_data.startswith("add_"):
            product_id = int(callback_data.split("_")[1])
            add_to_cart(chat_id, product_id)
            
        elif callback_data.startswith("show_"):
            product_id = int(callback_data.split("_")[1])
            show_product_with_image(chat_id, product_id)
            
        elif callback_data == "view_cart":
            show_cart(chat_id)
            
        elif callback_data == "place_order":
            process_order(chat_id)
            
        elif callback_data == "clear_cart":
            if chat_id in user_data:
                user_data[chat_id]["cart"] = []
            send_message(chat_id, "üóë –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞", main_menu(chat_id))
            
        elif callback_data == "show_menu":
            show_full_menu(chat_id)
            
        elif callback_data.startswith("category_"):
            category_key = callback_data.split("_", 1)[1]
            show_category(chat_id, category_key)
            
        elif callback_data == "main_menu":
            send_message(chat_id, "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", main_menu(chat_id))
            
        elif callback_data.startswith("payment_done_"):
            order_id = int(callback_data.split("_")[2])
            text = f"""
‚úÖ <b>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –û–ü–õ–ê–¢–ï –ü–†–ò–ù–Ø–¢–ê</b>

üì¶ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{order_id}
üí≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞.

‚è≥ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω.
üìû –°–≤—è–∑—å: +998 91 211 12 15
            """
            send_message(chat_id, text, main_menu(chat_id))
            
        elif callback_data.startswith("accept_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    orders_data[order_id]["status"] = "–ø—Ä–∏–Ω—è—Ç"
                    user_id = orders_data[order_id]["user_id"]
                    send_message(user_id, f"‚úÖ –ó–∞–∫–∞–∑ #{order_id} –ø—Ä–∏–Ω—è—Ç –∏ –≥–æ—Ç–æ–≤–∏—Ç—Å—è!")
                    send_message(chat_id, f"‚úÖ –ó–∞–∫–∞–∑ #{order_id} –ø—Ä–∏–Ω—è—Ç")
            
        elif callback_data.startswith("ready_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    orders_data[order_id]["status"] = "–≥–æ—Ç–æ–≤"
                    user_id = orders_data[order_id]["user_id"]
                    send_message(user_id, f"üéâ –ó–∞–∫–∞–∑ #{order_id} –≥–æ—Ç–æ–≤! –î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è...")
                    send_message(chat_id, f"‚úÖ –ó–∞–∫–∞–∑ #{order_id} –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –≥–æ—Ç–æ–≤—ã–π")
            
        elif callback_data.startswith("cancel_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    orders_data[order_id]["status"] = "–æ—Ç–º–µ–Ω–µ–Ω"
                    user_id = orders_data[order_id]["user_id"]
                    send_message(user_id, f"‚ùå –ó–∞–∫–∞–∑ #{order_id} –æ—Ç–º–µ–Ω–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                    send_message(chat_id, f"‚ùå –ó–∞–∫–∞–∑ #{order_id} –æ—Ç–º–µ–Ω–µ–Ω")
            
        elif callback_data.startswith("contact_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    user_id = orders_data[order_id]["user_id"]
                    user_phone = orders_data[order_id]["user_phone"]
                    send_message(chat_id, f"üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id}: {user_phone}")
            
        elif callback_data.startswith("maps_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    send_maps_links_to_admin(order_id)
            
        elif callback_data.startswith("cash_paid_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[2])
                if order_id in orders_data:
                    orders_data[order_id]["payment_status"] = "–æ–ø–ª–∞—á–µ–Ω–æ"
                    orders_data[order_id]["status"] = "–ø—Ä–∏–Ω—è—Ç"
                    user_id = orders_data[order_id]["user_id"]
                    send_message(user_id, f"‚úÖ –û–ø–ª–∞—Ç–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id} –ø–æ–ª—É—á–µ–Ω–∞ –∏ –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤–∏—Ç—Å—è!")
                    send_message(chat_id, f"‚úÖ –û–ø–ª–∞—Ç–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")
                    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ callback: {e}")
        send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# ==================== QOLGAN FUNKSIYALAR O'ZGARMADI ====================

def request_contact_and_location(chat_id):
    """Telefon raqam va lokatsiya so'rash - HAR BUYURTMA UCHUN ALohida"""
    request_contact(chat_id)

def request_contact(chat_id):
    """Telefon raqam so'rash"""
    if chat_id in user_data:
        user_data[chat_id].pop("phone", None)
        user_data[chat_id].pop("location", None)
        user_data[chat_id].pop("location_type", None)
    
    keyboard = {
        "keyboard": [[{
            "text": "üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            "request_contact": True
        }]],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }
    
    text = """
üìû <b>–û–¢–ü–†–ê–í–¨–¢–ï –í–ê–® –ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê</b>

–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞".
    """
    send_message(chat_id, text, keyboard)

def request_location(chat_id):
    """Lokatsiya so'rash - Google Maps va Yandex Maps"""
    keyboard = {
        "keyboard": [
            [{
                "text": "üìç –ß–µ—Ä–µ–∑ Google Maps",
                "request_location": True
            }],
            [{
                "text": "üåê –û—Ç–ø—Ä–∞–≤–∏—Ç—å Yandex Maps —Å—Å—ã–ª–∫—É"
            }],
            ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }
    
    text = """
üìç <b>–û–¢–ü–†–ê–í–¨–¢–ï –í–ê–® –ê–î–†–ï–°</b>

–î–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å.

<b>–í–∞—Ä–∏–∞–Ω—Ç—ã:</b>
‚Ä¢ "üìç –ß–µ—Ä–µ–∑ Google Maps" - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
‚Ä¢ "üåê –û—Ç–ø—Ä–∞–≤–∏—Ç—å Yandex Maps —Å—Å—ã–ª–∫—É" - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É Yandex Maps
‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å —Ç–µ–∫—Å—Ç–æ–º

üìù <i>–ü—Ä–∏–º–µ—Ä: –≥. –ö–∞—Ä—à–∏, —É–ª. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞, –¥–æ–º 45</i>
    """
    send_message(chat_id, text, keyboard)

def request_payment_method(chat_id):
    """To'lov usulini so'rash"""
    keyboard = {
        "keyboard": [
            ["üí≥ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π", "üíµ –ù–∞–ª–∏—á–Ω—ã–µ"],
            ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }
    
    text = """
üí≥ <b>–í–´–ë–ï–†–ò–¢–ï –°–ü–û–°–û–ë –û–ü–õ–ê–¢–´</b>

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:

‚Ä¢ <b>üí≥ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π</b> - –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É
‚Ä¢ <b>üíµ –ù–∞–ª–∏—á–Ω—ã–µ</b> - –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ
    """
    send_message(chat_id, text, keyboard)

def show_card_payment(chat_id, order_id):
    """Karta orqali to'lov ma'lumotlari"""
    order = orders_data[order_id]
    
    text = f"""
üí≥ <b>–û–ü–õ–ê–¢–ê –ö–ê–†–¢–û–ô</b>

üì¶ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{order_id}
üí∞ –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: {order['total_with_delivery']:,} —Å—É–º

<b>–î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã:</b>
üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: <code>{CARD_NUMBER}</code>
üë§ –í–ª–∞–¥–µ–ª–µ—Ü –∫–∞—Ä—Ç—ã: {CARD_HOLDER}

üí° <b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞</b>

‚úÖ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω.
    """
    
    keyboard = {
        "inline_keyboard": [
            [{"text": "‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", "callback_data": f"payment_done_{order_id}"}],
            [{"text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "main_menu"}]
        ]
    }
    
    send_message(chat_id, text, keyboard)

def confirm_cash_payment(chat_id, order_id):
    """Naqd to'lovni tasdiqlash"""
    order = orders_data[order_id]
    
    text = f"""
üíµ <b>–û–ü–õ–ê–¢–ê –ù–ê–õ–ò–ß–ù–´–ú–ò –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê</b>

üì¶ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{order_id}
üí∞ –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: {order['total_with_delivery']:,} —Å—É–º
‚úÖ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –ù–∞–ª–∏—á–Ω—ã–µ

üéâ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –∏ –≥–æ—Ç–æ–≤–∏—Ç—Å—è!
‚è∞ –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {PREPARATION_TIME}

üìû –°–≤—è–∑—å: +998 91 211 12 15
    """
    
    # Buyurtma holatini yangilash
    orders_data[order_id]["status"] = "–ø—Ä–∏–Ω—è—Ç"
    orders_data[order_id]["payment_method"] = "–Ω–∞–ª–∏—á–Ω—ã–µ"
    orders_data[order_id]["payment_status"] = "–æ–∂–∏–¥–∞–µ—Ç—Å—è"
    
    send_message(chat_id, text, main_menu(chat_id))
    
    # Adminga naqd to'lov haqida xabar
    admin_text = f"""
üíµ <b>–û–ü–õ–ê–¢–ê –ù–ê–õ–ò–ß–ù–´–ú–ò - –ó–ê–ö–ê–ó #{order_id}</b>

üë§ ID –∫–ª–∏–µ–Ω—Ç–∞: {order['user_id']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {order['user_phone']}
üí∞ –°—É–º–º–∞: {order['total_with_delivery']:,} —Å—É–º
üìç –ê–¥—Ä–µ—Å: {order['user_location']}
üó∫Ô∏è –¢–∏–ø –∫–∞—Ä—Ç—ã: {order['location_type']}

‚úÖ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –ù–∞–ª–∏—á–Ω—ã–µ
üîÑ –°—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞
    """
    
    admin_keyboard = {
        "inline_keyboard": [
            [{"text": "‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞", "callback_data": f"cash_paid_{order_id}"}],
            [{"text": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "callback_data": f"cancel_{order_id}"}]
        ]
    }
    
    send_message(ADMIN_ID, admin_text, admin_keyboard)

def create_maps_links(location, location_type):
    """Google Maps va Yandex Maps linklarini yaratish"""
    if location_type == "google_maps":
        if "http" in location:
            google_link = location
            # Google Maps linkidan Yandex Maps linkini yaratish
            if "?q=" in location:
                coords = location.split("?q=")[1]
                yandex_link = f"https://yandex.com/maps/?text={coords}"
            else:
                yandex_link = f"https://yandex.com/maps/?text={location}"
        else:
            google_link = f"https://maps.google.com/?q={location}"
            yandex_link = f"https://yandex.com/maps/?text={location}"
    
    elif location_type == "yandex_maps":
        if "http" in location:
            yandex_link = location
            # Yandex Maps linkidan Google Maps linkini yaratish
            if "?text=" in location:
                address = location.split("?text=")[1]
                google_link = f"https://maps.google.com/?q={address}"
            else:
                google_link = f"https://maps.google.com/?q={location}"
        else:
            google_link = f"https://maps.google.com/?q={location}"
            yandex_link = f"https://yandex.com/maps/?text={location}"
    
    else:  # text location
        google_link = f"https://maps.google.com/?q={location}"
        yandex_link = f"https://yandex.com/maps/?text={location}"
    
    return google_link, yandex_link

def send_order_to_admin(order_id):
    """Buyurtmani adminga yuborish - IKKALA XARITA HAM"""
    order = orders_data[order_id]
    
    # Xarita linklarini yaratish
    google_link, yandex_link = create_maps_links(
        order["user_location"], 
        order["location_type"]
    )
    
    payment_method = order.get("payment_method", "–ù–µ –≤—ã–±—Ä–∞–Ω")
    payment_status = order.get("payment_status", "–æ–∂–∏–¥–∞–µ—Ç—Å—è")
    
    admin_text = f"""
üÜï <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó</b> #{order_id}

üë§ ID –∫–ª–∏–µ–Ω—Ç–∞: {order['user_id']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {order['user_phone']}
üìç –ê–¥—Ä–µ—Å: {order['user_location']}
üó∫Ô∏è –¢–∏–ø –∫–∞—Ä—Ç—ã: {order['location_type']}

üó∫Ô∏è <b>–°–°–´–õ–ö–ò –ù–ê –ö–ê–†–¢–´:</b>
üìç Google Maps: {google_link}
üåê Yandex Maps: {yandex_link}

üíµ –¢–æ–≤–∞—Ä—ã: {order['total']:,} —Å—É–º
üéÅ –°–∫–∏–¥–∫–∞ ({DISCOUNT_PERCENT}%): -{order['discount_amount']:,} —Å—É–º
üí≥ –°–æ —Å–∫–∏–¥–∫–æ–π: {order['total_with_discount']:,} —Å—É–º
üöö –î–æ—Å—Ç–∞–≤–∫–∞: {DELIVERY_PRICE:,} —Å—É–º
üí∞ <b>–ò–¢–û–ì–û: {order['total_with_delivery']:,} —Å—É–º</b>

üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {payment_method}
üîÑ –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: {payment_status}
‚è∞ –í—Ä–µ–º—è: {get_uzbekistan_time().strftime('%H:%M')}

üì¶ <b>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</b>
"""
    for i, item in enumerate(order["items"], 1):
        admin_text += f"{i}. {item['name']} - {item['price']:,} —Å—É–º\n"
    
    admin_keyboard = {
        "inline_keyboard": [
            [{"text": "‚úÖ –ü—Ä–∏–Ω—è—Ç—å", "callback_data": f"accept_{order_id}"}],
            [{"text": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "callback_data": f"cancel_{order_id}"}],
            [{"text": "‚úÖ –ó–∞–∫–∞–∑ –ì–æ—Ç–æ–≤", "callback_data": f"ready_{order_id}"}],
            [{"text": "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º", "callback_data": f"contact_{order_id}"}],
            [{"text": "üó∫Ô∏è –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞—Ä—Ç—ã", "callback_data": f"maps_{order_id}"}]
        ]
    }
    
    send_message(ADMIN_ID, admin_text, admin_keyboard)

def send_maps_links_to_admin(order_id):
    """Adminga alohida xarita linklarini yuborish"""
    order = orders_data[order_id]
    
    google_link, yandex_link = create_maps_links(
        order["user_location"], 
        order["location_type"]
    )
    
    maps_text = f"""
üó∫Ô∏è <b>–°–°–´–õ–ö–ò –ù–ê –ö–ê–†–¢–´ –î–õ–Ø –ó–ê–ö–ê–ó–ê #{order_id}</b>

üìç <b>Google Maps:</b>
{google_link}

üåê <b>Yandex Maps:</b>
{yandex_link}

üë§ –ö–ª–∏–µ–Ω—Ç: {order['user_phone']}
üìç –ê–¥—Ä–µ—Å: {order['user_location']}
    """
    
    send_message(ADMIN_ID, maps_text)

def process_order(chat_id):
    """Buyurtmani qayta ishlash - HAR SAFAR TELEFON VA LOKATSIYA SO'RASH"""
    if chat_id not in user_data or "cart" not in user_data[chat_id] or not user_data[chat_id]["cart"]:
        send_message(chat_id, "‚ùå –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")
        return
    
    # Har safar telefon va lokatsiya so'rash
    request_contact_and_location(chat_id)

def create_order_from_cart(chat_id):
    """Savatdagi mahsulotlardan buyurtma yaratish"""
    if chat_id not in user_data or "cart" not in user_data[chat_id] or not user_data[chat_id]["cart"]:
        send_message(chat_id, "‚ùå –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")
        return
    
    if "phone" not in user_data[chat_id] or "location" not in user_data[chat_id]:
        send_message(chat_id, "‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –∏–ª–∏ –∞–¥—Ä–µ—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞")
        return
    
    # Buyurtmani saqlash
    global order_counter
    cart = user_data[chat_id]["cart"]
    total = sum(item['price'] for item in cart)
    
    # 20% chegirma hisoblash
    discount_amount = total * DISCOUNT_PERCENT // 100
    total_with_discount = total - discount_amount
    total_with_delivery = total_with_discount + DELIVERY_PRICE
    
    order_id = order_counter
    order_counter += 1
    
    orders_data[order_id] = {
        "user_id": chat_id,
        "user_phone": user_data[chat_id]["phone"],
        "user_location": user_data[chat_id]["location"],
        "location_type": user_data[chat_id]["location_type"],
        "items": cart.copy(),
        "total": total,
        "discount_amount": discount_amount,
        "total_with_discount": total_with_discount,
        "total_with_delivery": total_with_delivery,
        "status": "–Ω–æ–≤—ã–π",
        "payment_method": None,
        "payment_status": "–æ–∂–∏–¥–∞–µ—Ç—Å—è",
        "timestamp": get_uzbekistan_time().isoformat()
    }
    
    # Savatni tozalash
    user_data[chat_id]["cart"] = []
    
    # To'lov usulini so'rash
    request_payment_method(chat_id)

# ==================== UPTIME ROBOT ====================

def keep_alive():
    """UptimeRobot uchun keep-alive"""
    try:
        requests.get("https://tokiosushibot.onrender.com/health", timeout=5)
        print("üîÑ Keep-alive signal sent")
    except:
        print("‚ö†Ô∏è Keep-alive failed")

def start_keep_alive():
    """Keep-alive ni ishga tushirish"""
    schedule.every(10).minutes.do(keep_alive)
    while True:
        schedule.run_pending()
        time.sleep(1)

@app.route('/')
def home():
    return "üéå TOKIO SUSHI PREMIUM BOT - 24/7 Faol"

@app.route('/health')
def health_check():
    return {"status": "healthy", "service": "Tokio Sushi Premium Bot", "timestamp": get_uzbekistan_time().isoformat()}

@app.route('/ping')
def ping():
    return "pong"

# ==================== ASOSIY BOT LOGIKASI ====================

def run_bot():
    print("üöÄ Tokio Sushi Premium Bot ishga tushdi!")
    
    last_update_id = None
    while True:
        try:
            response = requests.get(BASE_URL + "getUpdates", {
                "offset": last_update_id,
                "timeout": 30
            }, timeout=10)
            
            if response.status_code == 200:
                data = response.json()
                if data.get("ok") and data.get("result"):
                    for update in data["result"]:
                        last_update_id = update["update_id"] + 1
                        
                        if "message" in update:
                            chat_id = update["message"]["chat"]["id"]
                            message = update["message"]
                            text = message.get("text", "")
                            
                            if text == "/start":
                                welcome_text = f"""
üéå <b>TOKIO SUSHI PREMIUM</b> üç±

üèÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü—Ä–µ–º–∏—É–º —è–ø–æ–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è</b>
‚≠ê 98 –ø—Ä–µ–º–∏—É–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤
üöö –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
üéÅ <b>–°–ö–ò–î–ö–ê {DISCOUNT_PERCENT}% –ù–ê –ö–ê–ñ–î–´–ô –ó–ê–ö–ê–ó!</b>

üìû –°–≤—è–∑—å: +998 91 211 12 15
                                """
                                send_message(chat_id, welcome_text, main_menu(chat_id))
                            
                            elif text == "üçΩ Mazali Menyu":
                                show_full_menu(chat_id)
                            
                            elif text == "üõí Savat":
                                show_cart(chat_id)
                                
                            elif text == "üì¶ Mening buyurtmalarim":
                                user_orders = [order for order in orders_data.values() if order["user_id"] == chat_id]
                                if user_orders:
                                    text = "üì¶ <b>–í–ê–®–ò –ó–ê–ö–ê–ó–´</b>\n\n"
                                    for order in user_orders[-5:]:
                                        status_emoji = "‚úÖ" if order["status"] == "–≥–æ—Ç–æ–≤" else "‚è≥" if order["status"] == "–ø—Ä–∏–Ω—è—Ç" else "‚ùå"
                                        text += f"{status_emoji} #{list(orders_data.keys())[list(orders_data.values()).index(order)]} - {order['total_with_delivery']:,} —Å—É–º - {order['status']}\n"
                                    send_message(chat_id, text)
                                else:
                                    send_message(chat_id, "üì¶ –£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤")
                            
                            elif text == "‚ÑπÔ∏è Ma'lumot":
                                info_text = f"""
üèÆ <b>TOKIO SUSHI</b> üéå

‚≠ê –ü—Ä–µ–º–∏—É–º —è–ø–æ–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è
üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {WORK_HOURS}
üöö –î–æ—Å—Ç–∞–≤–∫–∞: {PREPARATION_TIME}
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: {DELIVERY_PRICE:,} —Å—É–º
üéÅ <b>–°–∫–∏–¥–∫–∞ {DISCOUNT_PERCENT}% –Ω–∞ –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑!</b>

üìû –°–≤—è–∑—å: +998 91 211 12 15
üìç –ê–¥—Ä–µ—Å: –≥. –ö–∞—Ä—à–∏
                                """
                                send_message(chat_id, info_text)
                            
                            elif text == "üëë Admin Panel" and str(chat_id) == ADMIN_ID:
                                today_orders = len([o for o in orders_data.values() if datetime.fromisoformat(o['timestamp']).date() == get_uzbekistan_time().date()])
                                admin_text = f"""
üëë <b>–ü–ê–ù–ï–õ–¨ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê</b>

üìä –ó–∞–∫–∞–∑–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {today_orders} —à—Ç
üë• –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {len(user_data)} —á–µ–ª
üí∞ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders_data)} —à—Ç
üïí –í—Ä–µ–º—è: {get_uzbekistan_time().strftime('%H:%M')}
                                """
                                send_message(chat_id, admin_text)
                            
                            elif text == "‚¨ÖÔ∏è Asosiy menyu" or text == "üè† Asosiy menyu":
                                send_message(chat_id, "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", main_menu(chat_id))
                            
                            # To'lov usullari
                            elif text == "üí≥ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π":
                                # Oxirgi buyurtmani topish
                                user_orders = [order_id for order_id, order in orders_data.items() if order["user_id"] == chat_id and order["status"] == "–Ω–æ–≤—ã–π"]
                                if user_orders:
                                    last_order_id = max(user_orders)
                                    orders_data[last_order_id]["payment_method"] = "–∫–∞—Ä—Ç–∞"
                                    show_card_payment(chat_id, last_order_id)
                                    send_order_to_admin(last_order_id)
                                else:
                                    send_message(chat_id, "‚ùå –ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                            
                            elif text == "üíµ –ù–∞–ª–∏—á–Ω—ã–µ":
                                # Oxirgi buyurtmani topish
                                user_orders = [order_id for order_id, order in orders_data.items() if order["user_id"] == chat_id and order["status"] == "–Ω–æ–≤—ã–π"]
                                if user_orders:
                                    last_order_id = max(user_orders)
                                    orders_data[last_order_id]["payment_method"] = "–Ω–∞–ª–∏—á–Ω—ã–µ"
                                    confirm_cash_payment(chat_id, last_order_id)
                                    send_order_to_admin(last_order_id)
                                else:
                                    send_message(chat_id, "‚ùå –ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                            
                            # Telefon qabul qilish
                            elif "contact" in message:
                                contact = message["contact"]
                                phone = contact.get("phone_number", "")
                                
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["phone"] = phone
                                send_message(chat_id, f"‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–Ω—è—Ç: {phone}")
                                
                                # Lokatsiya so'rash
                                request_location(chat_id)
                            
                            # Google Maps lokatsiya qabul qilish
                            elif "location" in message:
                                location = message["location"]
                                lat = location["latitude"]
                                lon = location["longitude"]
                                maps_url = f"https://maps.google.com/?q={lat},{lon}"
                                
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["location"] = maps_url
                                user_data[chat_id]["location_type"] = "google_maps"
                                send_message(chat_id, f"‚úÖ –ê–¥—Ä–µ—Å –ø—Ä–∏–Ω—è—Ç!\nüìç Google Maps")
                                
                                # Buyurtma yaratish
                                create_order_from_cart(chat_id)
                            
                            # Yandex Maps linkini qabul qilish
                            elif text == "üåê –û—Ç–ø—Ä–∞–≤–∏—Ç—å Yandex Maps —Å—Å—ã–ª–∫—É":
                                send_message(chat_id, "üåê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É —Å—Å—ã–ª–∫—É Yandex Maps:")
                            
                            # Xarita linklarini qabul qilish
                            elif "maps.google.com" in text or "goo.gl/maps" in text:
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["location"] = text
                                user_data[chat_id]["location_type"] = "google_maps"
                                send_message(chat_id, f"‚úÖ –ê–¥—Ä–µ—Å Google Maps –ø—Ä–∏–Ω—è—Ç!")
                                
                                # Buyurtma yaratish
                                create_order_from_cart(chat_id)
                            
                            elif "yandex" in text and "maps" in text:
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["location"] = text
                                user_data[chat_id]["location_type"] = "yandex_maps"
                                send_message(chat_id, f"‚úÖ –ê–¥—Ä–µ—Å Yandex Maps –ø—Ä–∏–Ω—è—Ç!")
                                
                                # Buyurtma yaratish
                                create_order_from_cart(chat_id)
                            
                            # Oddiy matn manzilni qabul qilish
                            elif text and len(text) > 10 and text not in ["üçΩ Mazali Menyu", "üõí Savat", "üì¶ Mening buyurtmalarim", "‚ÑπÔ∏è Ma'lumot", "üëë Admin Panel", "üè† Asosiy menyu", "üí≥ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π", "üíµ –ù–∞–ª–∏—á–Ω—ã–µ", "üìç –ß–µ—Ä–µ–∑ Google Maps", "üåê –û—Ç–ø—Ä–∞–≤–∏—Ç—å Yandex Maps —Å—Å—ã–ª–∫—É"]:
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["location"] = text
                                user_data[chat_id]["location_type"] = "text"
                                send_message(chat_id, f"‚úÖ –ê–¥—Ä–µ—Å –ø—Ä–∏–Ω—è—Ç!\nüìç {text}")
                                
                                # Buyurtma yaratish
                                create_order_from_cart(chat_id)
                        
                        elif "callback_query" in update:
                            callback = update["callback_query"]
                            chat_id = callback["message"]["chat"]["id"]
                            callback_data = callback["data"]
                            
                            handle_callback(chat_id, callback_data)
            
            time.sleep(1)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
            time.sleep(3)

if __name__ == "__main__":
    # Keep-alive ni ishga tushirish
    keep_alive_thread = Thread(target=start_keep_alive, daemon=True)
    keep_alive_thread.start()
    
    # Asosiy botni ishga tushirish
    bot_thread = Thread(target=run_bot, daemon=True)
    bot_thread.start()
    
    # Flask server
    port = int(os.environ.get("PORT", 10000))
    app.run(host='0.0.0.0', port=port, debug=False)
