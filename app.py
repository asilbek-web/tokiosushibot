import requests
import json
import time
import os
from datetime import datetime, timedelta
from flask import Flask
from threading import Thread
import schedule

app = Flask(__name__)

print("üéå TOKIO SUSHI PREMIUM BOT yuklanmoqda...")

# Sozlamalar
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8132196767:AAFcTMKbjP6CEsigfR-SJ-sdxbVwH2AsxSM")
BASE_URL = f"https://api.telegram.org/bot{BOT_TOKEN}/"
ADMIN_ID = "7548105589"
DELIVERY_PRICE = 15000
WORK_HOURS = "11:00 - 02:00"
PREPARATION_TIME = "30-45 daqiqa"
DISCOUNT_PERCENT = 20  # 20% chegirma

# Karta ma'lumotlari
CARD_NUMBER = "9860 3501 4052 5865"
CARD_HOLDER = "SHOKHRUKH Y."

# TO'LIQ MENYU MA'LUMOTLARI
menu_data = {
    "issiq_taomlar": {
        "name": "üçú Issiq Taomlar",
        "emoji": "üçú",
        "products": [
            {"id": 1, "name": "–†–∞–º—ç–Ω –ö–ª–∞—Å—Å–∏–∫", "price": 80000, "description": "An'anaviy yapon rameni", "prep_time": "20 daqiqa"},
            {"id": 2, "name": "–†–∞–º—ç–Ω –¢–æ–∫–∏–æ", "price": 66000, "description": "Maxsus ramen", "prep_time": "25 daqiqa"},
            {"id": 3, "name": "–í–æ–∫ —Å –≥–æ–≤—è–¥–∏–Ω–æ–π", "price": 65000, "description": "Mol go'shti bilan vok", "prep_time": "15 daqiqa"},
            {"id": 4, "name": "–¢–æ–º –Ø–º –¢–æ–∫–∏–æ", "price": 95000, "description": "Taylandcha Tom Yam", "prep_time": "30 daqiqa"},
            {"id": 5, "name": "–ö—É—Ä–∏–Ω—ã–µ –∫—Ä—ã–ª—ã—à–∫–∏", "price": 35000, "description": "Qovurilgan tovuq qanotchalar", "prep_time": "15 daqiqa"},
            {"id": 6, "name": "–ö—É–∫—Å–∏", "price": 40000, "description": "Koreyscha kuksi", "prep_time": "10 daqiqa"},
            {"id": 7, "name": "–í–æ–∫ —Å –∫—É—Ä–∏—Ü–µ–π", "price": 55000, "description": "Tovuqli vok", "prep_time": "12 daqiqa"},
            {"id": 8, "name": "–¢–æ–º –Ø–º –ö–ª–∞—Å—Å–∏–∫", "price": 70000, "description": "Oddiy Tom Yam", "prep_time": "25 daqiqa"},
            {"id": 9, "name": "–•—Ä—É—Å—Ç—è—â–∏–µ –±–∞–∫–ª–∞–∂–∞–Ω—ã", "price": 45000, "description": "Qarsildoq baqlajonlar", "prep_time": "15 daqiqa"},
            {"id": 10, "name": "–¶–µ–∑–∞—Ä—å —Å –∫—É—Ä–∏—Ü–µ–π", "price": 45000, "description": "Sezar salati", "prep_time": "10 daqiqa"},
            {"id": 11, "name": "–ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç", "price": 50000, "description": "Rukola bilan salat", "prep_time": "8 daqiqa"},
            {"id": 12, "name": "–°–∞–ª–∞—Ç –†—É–∫–∫–æ–ª–∞", "price": 40000, "description": "Rukola salati", "prep_time": "8 daqiqa"},
            {"id": 13, "name": "–ú—É–∂—Å–∫–æ–π –ö–∞–ø—Ä–∏–∑", "price": 40000, "description": "Kapriz salati", "prep_time": "8 daqiqa"},
            {"id": 14, "name": "–ß—É–∫–∞ –°–∞–ª–∞—Ç", "price": 35000, "description": "Fuka salati", "prep_time": "8 daqiqa"},
            {"id": 15, "name": "–¢–∞—Ä-–¢–∞—Ä", "price": 15000, "description": "Tar-Tar sousi bilan", "prep_time": "5 daqiqa"},
            {"id": 16, "name": "–†–∞–º—ç–Ω", "price": 45000, "description": "Oddiy ramen", "prep_time": "18 daqiqa"}
        ]
    },
    "pizza_burger": {
        "name": "üçï Pizza va Burger",
        "emoji": "üçï",
        "products": [
            {"id": 17, "name": "–¢–æ–∫–∏–æ –ú–∏–∫—Å 35—Å–º", "price": 90000, "description": "Tokio miks pizza 35sm", "prep_time": "25 daqiqa"},
            {"id": 18, "name": "–ö–∞–∑–∏ 35—Å–º", "price": 90000, "description": "Bazi pizza 35sm", "prep_time": "25 daqiqa"},
            {"id": 19, "name": "–ú–∏–∫—Å 35—Å–º", "price": 85000, "description": "Aralash pizza 35sm", "prep_time": "22 daqiqa"},
            {"id": 20, "name": "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ 35—Å–º", "price": 80000, "description": "Pishloqli pizza 35sm", "prep_time": "20 daqiqa"},
            {"id": 21, "name": "–ö—É–∑–∏–∫–æ—Ä–∏–Ω 35—Å–º", "price": 80000, "description": "Kuzidirini pizza 35sm", "prep_time": "20 daqiqa"},
            {"id": 22, "name": "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ 35—Å–º", "price": 75000, "description": "Margarita pizza 35sm", "prep_time": "18 daqiqa"},
            {"id": 23, "name": "–ì–∞–º–±—É—Ä–≥–µ—Ä", "price": 28000, "description": "Gamburger", "prep_time": "10 daqiqa"},
            {"id": 24, "name": "–ß–∏–∑–±—É—Ä–≥–µ—Ä", "price": 33000, "description": "Chizburger", "prep_time": "12 daqiqa"},
            {"id": 25, "name": "–¢–æ–∫–∏–æ –ë—É—Ä–≥–µ—Ä", "price": 37000, "description": "Tokio maxsus burger", "prep_time": "15 daqiqa"},
            {"id": 26, "name": "–ö—É—Ä–∏–Ω—ã–µ –∫—Ä—ã–ª—ã—à–∫–∏", "price": 35000, "description": "Qovurilgan tovuq qanotchalar", "prep_time": "15 daqiqa"},
            {"id": 27, "name": "–°—ã—Ä–Ω—ã–µ —à–∞—Ä–∏–∫–∏", "price": 22000, "description": "Pishloq shariklari", "prep_time": "8 daqiqa"},
            {"id": 28, "name": "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –§—Ä–∏", "price": 22000, "description": "Qovurilgan kartoshka", "prep_time": "7 daqiqa"},
            {"id": 29, "name": "–ö–ª–∞–± –°–µ–Ω–¥–≤–∏—á", "price": 35000, "description": "Klub sendvich", "prep_time": "10 daqiqa"}
        ]
    },
    "sovuq_rollar": {
        "name": "üç£ Sovuq Rollar",
        "emoji": "üç£",
        "products": [
            {"id": 30, "name": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –ì–æ–ª–¥", "price": 120000, "description": "–°—ã—Ä.–õ–æ—Å–æ—Å—å.–û–≥—É—Ä–µ—Ü.–£–≥–æ—Ä—å.–£–Ω–∞–≥–∏ —Å–æ—É—Å.–¢—É–Ω–µ—Ü.–ö—É–Ω–∂—É—Ç.–ú–∞—Å—Å–∞–≥–æ –∏–∫—Ä–∞", "prep_time": "20 daqiqa"},
            {"id": 31, "name": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è (–¢—É–Ω–µ—Ü)", "price": 90000, "description": "–°—ã—Ä.–¢—É–Ω–µ—Ü", "prep_time": "15 daqiqa"},
            {"id": 32, "name": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –ö–ª–∞—Å—Å–∏–∫", "price": 80000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü—ã.–õ–æ—Å–æ—Å—å", "prep_time": "12 daqiqa"},
            {"id": 33, "name": "–≠–±–∏ –ì–æ–ª–¥", "price": 110000, "description": "–°—ã—Ä.–õ–æ—Å–æ—Å—å.–ö—Ä–µ–≤–µ—Ç–∫–∏ –≤ –∫–ª—è—Ä–µ.–û–≥—É—Ä–µ—Ü.–õ—É–∫", "prep_time": "18 daqiqa"},
            {"id": 34, "name": "–õ–æ—Å–æ—Å—å (–≥—Ä–∏–ª—å)", "price": 93000, "description": "–°—ã—Ä.–£–Ω–∞–≥–∏ —Å–æ—É—Å.–õ–æ—Å–æ—Å—å.–ú–∞—Å—Å–∞–≥–æ", "prep_time": "15 daqiqa"},
            {"id": 35, "name": "–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏", "price": 80000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–ö—Ä–µ–≤–µ—Ç–∫–∏ —Ç–∏–≥—Ä–æ–≤—ã–µ.–ú–∞—Å—Å–∞–≥–æ –∫—Ä–∞—Å—Å", "prep_time": "12 daqiqa"},
            {"id": 36, "name": "–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å –ª–æ—Å–æ—Å–µ–º", "price": 76000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–õ–æ—Å–æ—Å—å.–ú–∞—Å—Å–∞–≥–æ –∫—Ä–∞—Å—Å", "prep_time": "12 daqiqa"},
            {"id": 37, "name": "–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å –∫—Ä–∞–±–æ–º", "price": 70000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–°–Ω–µ–∂–Ω—ã–π –∫—Ä–∞–±.–ú–∞—Å—Å–∞–≥–æ –∫—Ä–∞—Å–Ω—ã–π", "prep_time": "12 daqiqa"},
            {"id": 38, "name": "–†–æ–ª–ª –û–≥—É—Ä–µ—Ü", "price": 65000, "description": "–°—ã—Ä.–°—Ç—Ä—É–∂–∫–∞ —Ç—É–Ω—Ü–∞.–û–≥—É—Ä–µ—Ü", "prep_time": "10 daqiqa"}
        ]
    },
    "pishirilgan_rollar": {
        "name": "üî• Pishirilgan Rollar",
        "emoji": "üî•",
        "products": [
            {"id": 39, "name": "–†–æ–ª–ª –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –°—Ç–µ–π–∫", "price": 95000, "description": "–°—ã—Ä.–ª–æ—Å–æ—Å—å.–æ–≥—É—Ä–µ—Ü.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞", "prep_time": "18 daqiqa"},
            {"id": 40, "name": "–†–æ–ª–ª —Å –∫—Ä–µ–≤–µ—Ç–∫–æ–π", "price": 80000, "description": "–°—ã—Ä.–¢–∏–≥—Ä–æ–≤—ã–µ –∫—Ä–µ–≤–µ—Ç–∫–∏.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞.–û–≥—É—Ä–µ—Ü.–∫—É–Ω–∂—É—Ç", "prep_time": "16 daqiqa"},
            {"id": 41, "name": "–†–æ–ª–ª —Å —É–≥—Ä–µ–º", "price": 80000, "description": "–°—ã—Ä.–æ–≥—É—Ä–µ—Ü—ã.–∫—É–Ω–∂—É—Ç.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞.—É–≥–æ—Ä—å", "prep_time": "16 daqiqa"},
            {"id": 42, "name": "–†–æ–ª–ª —Å –∫—Ä–∞–±–æ–º", "price": 66000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–°–Ω–µ–∂–Ω—ã–π –∫—Ä–∞–±", "prep_time": "14 daqiqa"},
            {"id": 43, "name": "–†–æ–ª–ª —Å –ª–æ—Å–æ—Å–µ–º", "price": 77000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü—ã.–∫—É–Ω–∂—É—Ç,—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞,–ª–æ—Å–æ—Å—å,—É–Ω–∞–≥–∏ —Å–æ—É—Å", "prep_time": "15 daqiqa"},
            {"id": 44, "name": "–†–æ–ª–ª –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è", "price": 70000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü—ã.—Å–Ω–µ–∂–Ω—ã–π –∫—Ä–∞–±.–∏–∫—Ä–∞ –º–∞—Å—Å–∞–≥–æ.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞.—É–Ω–∞–≥–∏ —Å–æ—É—Å", "prep_time": "14 daqiqa"},
            {"id": 45, "name": "–†–æ–ª–ª —Å –∫—É—Ä–∏—Ü–æ–π", "price": 55000, "description": "–ú–∞–π–æ–Ω–µ–∑.–°–∞–ª–∞—Ç –ê–π–∑–±–µ—Ä–≥.–∫—É—Ä–∏—Ü–∞.—Å—ã—Ä–Ω–∞—è —à–∞–ø–∫–∞", "prep_time": "12 daqiqa"}
        ]
    },
    "qovurilgan_rollar": {
        "name": "‚ö° Qovurilgan Rollar",
        "emoji": "‚ö°",
        "products": [
            {"id": 46, "name": "–¢–µ–º–ø—É—Ä–∞ (–¢—É–Ω–µ—Ü)", "price": 75000, "description": "–û–≥—É—Ä–µ—Ü.–°—ã—Ä.–¢—É–Ω–µ—Ü", "prep_time": "15 daqiqa"},
            {"id": 47, "name": "–¢–µ–º–ø—É—Ä–∞ –£–≥–æ—Ä—å", "price": 71000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–£–≥–æ—Ä—å.–ú–∞—Å—Å–∞–≥–æ –∫—Ä–∞—Å—Å.–£–Ω–∞–≥–∏ —Å–æ—É—Å", "prep_time": "15 daqiqa"},
            {"id": 48, "name": "–¢–µ–º–ø—É—Ä–∞ —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏", "price": 70000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–ö—Ä–µ–≤–µ—Ç–∫–∏ —Ç–∏–≥—Ä–æ–≤—ã–µ.–ú–∞—Å—Å–∞–≥–æ –∫—Ä–∞—Å—Å.–£–Ω–∞–≥–∏ —Å–æ—É—Å", "prep_time": "15 daqiqa"},
            {"id": 49, "name": "–¢–µ–º–ø—É—Ä–∞ —Å –ª–æ—Å–æ—Å–µ–º", "price": 66000, "description": "–°—ã—Ä.–û–≥—É—Ä–µ—Ü.–õ–æ—Å–æ—Å—å.–£–Ω–∞–≥–∏ —Å–æ—É—Å.–ö—É–Ω–∂—É—Ç", "prep_time": "14 daqiqa"},
            {"id": 50, "name": "–¢–µ–º–ø—É—Ä–∞ –ö—É—Ä–∏—Ü–∞", "price": 48000, "description": "–ê–π—Å–±–µ—Ä–≥.–ú–∞–π–æ–Ω–µ–∑.–ö—É—Ä–∏—Ü–∞.–£–Ω–∞–≥–∏ —Å–æ—É—Å", "prep_time": "12 daqiqa"}
        ]
    },
    "sushi_gunkan": {
        "name": "üç± Sushi va Gunkan",
        "emoji": "üç±",
        "products": [
            {"id": 51, "name": "–ì—É–Ω–∫–∞–Ω –¢—É–Ω–µ—Ü", "price": 30000, "description": "Tunetsli gunkan", "prep_time": "5 daqiqa"},
            {"id": 52, "name": "–°—É—à–∏ –¢—É–Ω–µ—Ü", "price": 25000, "description": "Tunetsli sushi", "prep_time": "5 daqiqa"},
            {"id": 53, "name": "–ú–∏–Ω–∏ –¢—É–Ω–µ—Ü", "price": 34000, "description": "Mini tunets sushi", "prep_time": "5 daqiqa"},
            {"id": 54, "name": "–ì—É–Ω–∫–∞–Ω –õ–æ—Å–æ—Å—å", "price": 24000, "description": "Lososli gunkan", "prep_time": "5 daqiqa"},
            {"id": 55, "name": "–°—É—à–∏ –õ–æ—Å–æ—Å—å", "price": 20000, "description": "Lososli sushi", "prep_time": "5 daqiqa"},
            {"id": 56, "name": "–ú–∏–Ω–∏ –õ–æ—Å–æ—Å—å", "price": 34000, "description": "Mini losos sushi", "prep_time": "5 daqiqa"},
            {"id": 57, "name": "–ì—É–Ω–∫–∞–Ω –£–≥–æ—Ä—å", "price": 24000, "description": "Ugorli gunkan", "prep_time": "5 daqiqa"},
            {"id": 58, "name": "–°—É—à–∏ –£–≥–æ—Ä—å", "price": 23000, "description": "Ugorli sushi", "prep_time": "5 daqiqa"},
            {"id": 59, "name": "–ú–∏–Ω–∏ –£–≥–æ—Ä—å", "price": 34000, "description": "Mini ugor sushi", "prep_time": "5 daqiqa"},
            {"id": 60, "name": "–ì—É–Ω–∫–∞–Ω –ú–∞—Å—Å–∞–≥–æ", "price": 24000, "description": "Massago gunkan", "prep_time": "5 daqiqa"},
            {"id": 61, "name": "–°—É—à–∏ –ö—Ä–µ–≤–µ—Ç–∫–∞", "price": 20000, "description": "Qisqichbaqali sushi", "prep_time": "5 daqiqa"},
            {"id": 62, "name": "–ú–∏–Ω–∏ –ö—Ä–∞–±", "price": 23000, "description": "Mini krab sushi", "prep_time": "5 daqiqa"},
            {"id": 63, "name": "–ú–∏–Ω–∏ –û–≥—É—Ä–µ—Ü", "price": 15000, "description": "Mini bodring sushi", "prep_time": "5 daqiqa"}
        ]
    },
    "setlar": {
        "name": "üéé Setlar",
        "emoji": "üéé",
        "products": [
            {"id": 64, "name": "–°–µ—Ç –¢–æ–∫–∏–æ 48—à—Ç", "price": 390000, "description": "–î—Ä–∞–∫–æ–Ω —Ä–æ–ª–ª 8—à—Ç + –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫ 8—à—Ç + –¢–µ–º–ø—É—Ä–∞ –õ–æ—Å–æ—Å—å 8—à—Ç + –ö—Ä–∞–± –ó–∞–ø–µ—á–µ–Ω—ã–π 16—à—Ç + –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è –õ–æ—Å–æ—Å—å 8—à—Ç", "prep_time": "40 daqiqa"},
            {"id": 65, "name": "–°–µ—Ç –Ø–º–∞–º–æ—Ç–æ 32—à—Ç", "price": 290000, "description": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫ 8—à—Ç + –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è –∫–ª–∞—Å—Å–∏–∫ 8—à—Ç + –†–æ–ª–ª —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏ 8—à—Ç + –†–æ–ª–ª –ß—É–∫–∞ 8—à—Ç", "prep_time": "35 daqiqa"},
            {"id": 66, "name": "–°–µ—Ç –ò–¥–µ–∞–ª 32—à—Ç", "price": 260000, "description": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫ 8—à—Ç + –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è –ö—É–Ω—Å—É—Ç 8—à—Ç + –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è –ß–µ—Ä–Ω—ã–π 8—à—Ç + –î—Ä–∞–∫–æ–Ω —Ä–æ–ª–ª 8—à—Ç", "prep_time": "32 daqiqa"},
            {"id": 67, "name": "–°–µ—Ç –û–∫–µ–π 24—à—Ç", "price": 200000, "description": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫ 8—à—Ç + –ó–∞–ø–µ—á–µ–Ω—ã–π –ª–æ—Å–æ—Å—å 8—à—Ç + –¢–µ–º–ø—É—Ä–∞ –ª–æ—Å–æ—Å—å 8—à—Ç", "prep_time": "30 daqiqa"},
            {"id": 68, "name": "–°–µ—Ç –°–∞–∫—É—Ä–∞ 24—à—Ç", "price": 180000, "description": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫ 4—à—Ç + –ö–∞–Ω–∞–¥–∞ –ì–æ–ª–¥ 4—à—Ç + –ú–∏–Ω–∏ —Ä–æ–ª–ª –ª–æ—Å–æ—Å—å 8—à—Ç + –¢–µ–º–ø—É—Ä–∞ –ª–æ—Å–æ—Å—å 8—à—Ç", "prep_time": "28 daqiqa"},
            {"id": 69, "name": "–°–µ—Ç –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π 32—à—Ç", "price": 150000, "description": "–ú–∏–Ω–∏ —Ä–æ–ª–ª –ª–æ—Å–æ—Å—å 8—à—Ç + –ú–∏–Ω–∏ —Ä–æ–ª–ª –æ–≥—É—Ä–µ—Ü 8—à—Ç + –ú–∏–Ω–∏ —Ä–æ–ª–ª —Ç—É–Ω–µ—Ü 8—à—Ç + –ú–∏–Ω–∏ —Ä–æ–ª–ª –∫—Ä–∞–± 8—à—Ç", "prep_time": "25 daqiqa"}
        ]
    },
    "ichimliklar": {
        "name": "ü•§ Ichimliklar",
        "emoji": "ü•§",
        "products": [
            {"id": 70, "name": "–ú–æ—Ö–∏—Ç–æ 1–ª", "price": 45000, "description": "Sovuq mojito", "prep_time": "3 daqiqa"},
            {"id": 71, "name": "–ú–æ—Ö–∏—Ç–æ 0.7–ª", "price": 25000, "description": "Sovuq mojito", "prep_time": "3 daqiqa"},
            {"id": 72, "name": "–ú–æ—Ö–∏—Ç–æ 0.5–ª", "price": 20000, "description": "Sovuq mojito", "prep_time": "3 daqiqa"},
            {"id": 73, "name": "–ß–∞–π –ß—É–¥–æ", "price": 35000, "description": "Maxsus choy", "prep_time": "2 daqiqa"},
            {"id": 74, "name": "–ß–∞–π –¢–æ–∫–∏–æ", "price": 35000, "description": "Tokio maxsus choy", "prep_time": "2 daqiqa"},
            {"id": 75, "name": "–ß–∞–π –§—Ä—É–∫—Ç–æ–≤—ã–π", "price": 35000, "description": "Mevali choy", "prep_time": "2 daqiqa"},
            {"id": 76, "name": "–ß–∞–π –¢–∞—Ä—Ö—É–Ω", "price": 35000, "description": "Tarxun choyi", "prep_time": "2 daqiqa"},
            {"id": 77, "name": "–ß–∞–π –ë–∞–≥–∏–Ω–∏", "price": 35000, "description": "Rayhon choyi", "prep_time": "2 daqiqa"},
            {"id": 78, "name": "–ß–∞–π –ö–∞—Ä–∫–∞–¥–µ", "price": 30000, "description": "Karkade choyi", "prep_time": "2 daqiqa"},
            {"id": 79, "name": "–ß–∞–π –õ–∏–º–æ–Ω", "price": 25000, "description": "Limonli choy", "prep_time": "2 daqiqa"},
            {"id": 80, "name": "–ú–∏–ª–∫—à–µ–π–∫ –ö–ª—É–±–Ω–∏–∫–∞", "price": 30000, "description": "Qulupnayli milkshake", "prep_time": "5 daqiqa"},
            {"id": 81, "name": "–ú–∏–ª–∫—à–µ–π–∫ –°–Ω–∏–∫–µ—Ä—Å", "price": 30000, "description": "Snickers milkshake", "prep_time": "5 daqiqa"},
            {"id": 82, "name": "–ú–∏–ª–∫—à–µ–π–∫ –ë–∞–Ω–∞–Ω", "price": 30000, "description": "Bananli milkshake", "prep_time": "5 daqiqa"},
            {"id": 83, "name": "–ú–∏–ª–∫—à–µ–π–∫ –û—Ä–µ–æ", "price": 30000, "description": "Oreo milkshake", "prep_time": "5 daqiqa"},
            {"id": 84, "name": "–ú–∏–ª–∫—à–µ–π–∫ –ö–∏–≤–∏", "price": 30000, "description": "Kinder milkshake", "prep_time": "5 daqiqa"},
            {"id": 85, "name": "–ö–æ–ª–∞ 1–ª", "price": 14000, "description": "Gazlangan ichimlik 1L", "prep_time": "1 daqiqa"},
            {"id": 86, "name": "–§–∞–Ω—Ç–∞ 1–ª", "price": 14000, "description": "Gazlangan ichimlik 1L", "prep_time": "1 daqiqa"},
            {"id": 87, "name": "–§—é—Å—Ç–∏ 1–ª", "price": 13000, "description": "Gazlangan ichimlik 1L", "prep_time": "1 daqiqa"},
            {"id": 88, "name": "–ö–æ–ª–∞-–§–∞–Ω—Ç–∞ –ñ/–ë", "price": 10000, "description": "Kola 0.5L", "prep_time": "1 daqiqa"},
            {"id": 89, "name": "–í–æ–¥–∞ –ë–µ–∑ –ì–∞–∑–∞", "price": 8000, "description": "Gazsiz suv", "prep_time": "1 daqiqa"},
            {"id": 90, "name": "–°–æ–∫", "price": 19000, "description": "Tabiiy sok", "prep_time": "1 daqiqa"}
        ]
    }
}

# Ma'lumotlar bazasi
user_data = {}
orders_data = {}
order_counter = 1

# ==================== ASOSIY FUNKSIYALAR ====================

def send_message(chat_id, text, keyboard=None):
    """Xabar yuborish"""
    try:
        url = BASE_URL + "sendMessage"
        data = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": "HTML",
            "disable_web_page_preview": True
        }
        if keyboard:
            data["reply_markup"] = json.dumps(keyboard)
        response = requests.post(url, json=data, timeout=10)
        return response.status_code == 200
    except Exception as e:
        print(f"Xabar yuborishda xato: {e}")
        return False

def main_menu(chat_id):
    """Asosiy menyu"""
    if str(chat_id) == ADMIN_ID:
        keyboard = {
            "keyboard": [
                ["üç± Premium Menyu", "üõí Savat"],
                ["üì¶ Mening buyurtmalarim", "‚ÑπÔ∏è Ma'lumot"],
                ["üëë Admin Panel"]
            ],
            "resize_keyboard": True
        }
    else:
        keyboard = {
            "keyboard": [
                ["üç± Premium Menyu", "üõí Savat"],
                ["üì¶ Mening buyurtmalarim", "‚ÑπÔ∏è Ma'lumot"]
            ],
            "resize_keyboard": True
        }
    return keyboard

def show_full_menu(chat_id):
    """TO'LIQ MENYU - hamma mahsulotlar bir joyda"""
    text = f"""
üéå <b>TOKIO SUSHI PREMIUM - TO'LIQ MENYU</b> üç±

üéé <i>–°—É—à–∏ - —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å—å–µ—Å—Ç—å!</i>
üéé <i>Sushi - bu iste'mol qilish mumkin bo'lgan san'at!</i>

‚≠ê <b>8 ta kategoriya, 90 ta mahsulot</b>
üöö <b>Yetkazib berish:</b> {DELIVERY_PRICE:,} so'm
‚è∞ <b>Tayyorlanish vaqti:</b> {PREPARATION_TIME}
üïí <b>Ish vaqti:</b> {WORK_HOURS}
üéÅ <b>Har bir buyurtmaga {DISCOUNT_PERCENT}% chegirma!</b>

<b>Marhamat, barcha mahsulotlar:</b>
"""
    
    # Barcha kategoriyalarni ketma-ket chiqarish
    for category_key, category in menu_data.items():
        text += f"\n\n{category['emoji']} <b>{category['name']}</b>\n"
        text += "‚îÄ" * 30 + "\n"
        
        for product in category["products"]:
            text += f"üç£ <b>{product['name']}</b>\n"
            text += f"üí∞ <i>{product['price']:,} so'm</i>\n"
            text += f"‚è±Ô∏è {product['prep_time']} | {product['description']}\n\n"
    
    text += "\nüõí <b>Mahsulot tanlash uchun pastdagi tugmalardan foydalaning</b>"
    
    # Inline keyboard - barcha mahsulotlar uchun tugmalar
    keyboard = {"inline_keyboard": []}
    
    # Har bir kategoriya uchun alohida qator
    for category_key, category in menu_data.items():
        for product in category["products"]:
            # Har bir mahsulot uchun tugma
            keyboard["inline_keyboard"].append([{
                "text": f"‚ûï {product['name']}",
                "callback_data": f"add_{product['id']}"
            }])
    
    # Asosiy tugmalar
    keyboard["inline_keyboard"].extend([
        [{"text": "üõí Savatni ko'rish", "callback_data": "view_cart"}],
        [{"text": "üìû Buyurtma berish", "callback_data": "place_order"}],
        [{"text": "üè† Asosiy menyu", "callback_data": "main_menu"}]
    ])
    
    send_message(chat_id, text, keyboard)

def add_to_cart(chat_id, product_id):
    """Mahsulotni savatga qo'shish"""
    # Mahsulotni topish
    product = None
    for category in menu_data.values():
        for p in category["products"]:
            if p["id"] == product_id:
                product = p
                break
        if product:
            break
    
    if not product:
        send_message(chat_id, "‚ùå Mahsulot topilmadi")
        return
    
    # Foydalanuvchi ma'lumotlarini tekshirish
    if chat_id not in user_data:
        user_data[chat_id] = {"cart": []}
    
    if "cart" not in user_data[chat_id]:
        user_data[chat_id]["cart"] = []
    
    # Savatga qo'shish
    user_data[chat_id]["cart"].append(product)
    
    text = f"""
‚úÖ <b>SAVATGA QO'SHILDI</b>

üç£ {product['name']}
üí∞ Narxi: {product['price']:,} so'm
‚è±Ô∏è Tayyorlanish: {product['prep_time']}

üõí Savatingizdagi mahsulotlar: {len(user_data[chat_id]['cart'])} ta
    """
    send_message(chat_id, text)

def show_cart(chat_id):
    """Savatni ko'rsatish"""
    if chat_id not in user_data or "cart" not in user_data[chat_id] or not user_data[chat_id]["cart"]:
        send_message(chat_id, "üõí <b>Savatingiz bo'sh</b>\n\nMarhamat, menyudan mahsulot tanlang!")
        return
    
    cart = user_data[chat_id]["cart"]
    total = sum(item['price'] for item in cart)
    
    # 20% chegirma hisoblash
    discount_amount = total * DISCOUNT_PERCENT // 100
    total_with_discount = total - discount_amount
    total_with_delivery = total_with_discount + DELIVERY_PRICE
    
    text = "üõí <b>SAVATINGIZ</b>\n\n"
    for i, item in enumerate(cart, 1):
        text += f"{i}. {item['name']} - {item['price']:,} so'm\n"
    
    text += f"\nüíµ Mahsulotlar: {total:,} so'm"
    text += f"\nüéÅ Chegirma ({DISCOUNT_PERCENT}%): -{discount_amount:,} so'm"
    text += f"\nüí≥ Chegirma bilan: {total_with_discount:,} so'm"
    text += f"\nüöö Yetkazish: {DELIVERY_PRICE:,} so'm"
    text += f"\nüí∞ <b>JAMI: {total_with_delivery:,} so'm</b>"
    text += f"\n‚è∞ Tayyorlanish: {PREPARATION_TIME}"
    
    keyboard = {
        "inline_keyboard": [
            [{"text": "‚úÖ BUYURTMA BERISH", "callback_data": "place_order"}],
            [{"text": "üóë Savatni tozalash", "callback_data": "clear_cart"}],
            [{"text": "üìã Menyuni ko'rish", "callback_data": "show_menu"}]
        ]
    }
    
    send_message(chat_id, text, keyboard)

def request_contact(chat_id):
    """Telefon raqam so'rash"""
    keyboard = {
        "keyboard": [[{
            "text": "üìû Telefon raqamni yuborish",
            "request_contact": True
        }]],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }
    
    text = """
üìû <b>TELEFON RAQAMINGIZNI YUBORING</b>

Buyurtma berish uchun telefon raqamingizni yuboring.
"üìû Telefon raqamni yuborish" tugmasini bosing.
    """
    send_message(chat_id, text, keyboard)

def request_location(chat_id):
    """Lokatsiya so'rash - Google Maps va Yandex Maps"""
    keyboard = {
        "keyboard": [
            [{
                "text": "üìç Google Maps orqali",
                "request_location": True
            }],
            [{
                "text": "üåê Yandex Maps linkini yuborish"
            }],
            [{
                "text": "üè† Asosiy menyu"
            }]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }
    
    text = """
üìç <b>MANZILINGIZNI YUBORING</b>

Yetkazib berish uchun manzilingizni yuboring.

<b>Variantlar:</b>
‚Ä¢ "üìç Google Maps orqali" - lokatsiyangizni avtomatik yuboring
‚Ä¢ "üåê Yandex Maps linkini yuborish" - Yandex Maps linkini yuboring
‚Ä¢ Yoki aniq manzilingizni matn shaklida yozing

üìù <i>Misol: Qarshi shahar, Amir Temur ko'chasi, 45-uy</i>
    """
    send_message(chat_id, text, keyboard)

def request_payment_method(chat_id):
    """To'lov usulini so'rash"""
    keyboard = {
        "keyboard": [
            ["üí≥ Karta orqali to'lash", "üíµ Naqd pul"],
            ["üè† Asosiy menyu"]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }
    
    text = """
üí≥ <b>TO'LOV USULINI TANLANG</b>

Iltimos, qulay to'lov usulini tanlang:

‚Ä¢ <b>üí≥ Karta orqali to'lash</b> - kartaga o'tkazma qilish
‚Ä¢ <b>üíµ Naqd pul</b> - yetkazib berish paytida naqd pul
    """
    send_message(chat_id, text, keyboard)

def show_card_payment(chat_id, order_id):
    """Karta orqali to'lov ma'lumotlari"""
    order = orders_data[order_id]
    
    text = f"""
üí≥ <b>KARTA ORQALI TO'LOV</b>

üì¶ Buyurtma raqami: #{order_id}
üí∞ To'lov summasi: {order['total_with_delivery']:,} so'm

<b>Karta ma'lumotlari:</b>
üí≥ Karta raqami: <code>{CARD_NUMBER}</code>
üë§ Karta egasi: {CARD_HOLDER}

üí° <b>To'lov qilgandan so'ng, chek rasmini @{ADMIN_ID} ga yuboring</b>

‚úÖ To'lov tasdiqlangandan so'ng buyurtmangiz tayyorlanadi.
    """
    
    keyboard = {
        "inline_keyboard": [
            [{"text": "‚úÖ To'lov qildim", "callback_data": f"payment_done_{order_id}"}],
            [{"text": "üè† Asosiy menyu", "callback_data": "main_menu"}]
        ]
    }
    
    send_message(chat_id, text, keyboard)

def confirm_cash_payment(chat_id, order_id):
    """Naqd to'lovni tasdiqlash"""
    order = orders_data[order_id]
    
    text = f"""
üíµ <b>NAQD TO'LOV TASDIQLANDI</b>

üì¶ Buyurtma raqami: #{order_id}
üí∞ To'lov summasi: {order['total_with_delivery']:,} so'm
‚úÖ To'lov usuli: Naqd pul

üéâ Buyurtmangiz qabul qilindi va tayyorlanmoqda!
‚è∞ Tayyorlanish vaqti: {PREPARATION_TIME}

üìû Bog'lanish: +998 91 211 12 15
    """
    
    # Buyurtma holatini yangilash
    orders_data[order_id]["status"] = "qabul_qilindi"
    orders_data[order_id]["payment_method"] = "naqd"
    orders_data[order_id]["payment_status"] = "kutilmoqda"
    
    send_message(chat_id, text, main_menu(chat_id))
    
    # Adminga naqd to'lov haqida xabar
    admin_text = f"""
üíµ <b>NAQD TO'LOV - BUYURTMA #{order_id}</b>

üë§ Mijoz ID: {order['user_id']}
üìû Telefon: {order['user_phone']}
üí∞ Summa: {order['total_with_delivery']:,} so'm
üìç Manzil: {order['user_location']}

‚úÖ To'lov usuli: Naqd pul
üîÑ Holat: To'lov kutilmoqda
    """
    
    admin_keyboard = {
        "inline_keyboard": [
            [{"text": "‚úÖ To'lov qabul qilindi", "callback_data": f"cash_paid_{order_id}"}],
            [{"text": "‚ùå Bekor qilish", "callback_data": f"cancel_{order_id}"}]
        ]
    }
    
    send_message(ADMIN_ID, admin_text, admin_keyboard)

def process_order(chat_id):
    """Buyurtmani qayta ishlash"""
    if chat_id not in user_data or "cart" not in user_data[chat_id] or not user_data[chat_id]["cart"]:
        send_message(chat_id, "‚ùå Savatingiz bo'sh")
        return
    
    # Telefon va manzilni tekshirish
    user_info = user_data.get(chat_id, {})
    
    if "phone" not in user_info:
        request_contact(chat_id)
        return
    
    if "location" not in user_info:
        request_location(chat_id)
        return
    
    # Buyurtmani saqlash
    global order_counter
    cart = user_data[chat_id]["cart"]
    total = sum(item['price'] for item in cart)
    
    # 20% chegirma hisoblash
    discount_amount = total * DISCOUNT_PERCENT // 100
    total_with_discount = total - discount_amount
    total_with_delivery = total_with_discount + DELIVERY_PRICE
    
    order_id = order_counter
    order_counter += 1
    
    orders_data[order_id] = {
        "user_id": chat_id,
        "user_phone": user_info["phone"],
        "user_location": user_info["location"],
        "location_type": user_info.get("location_type", "google_maps"),
        "items": cart.copy(),
        "total": total,
        "discount_amount": discount_amount,
        "total_with_discount": total_with_discount,
        "total_with_delivery": total_with_delivery,
        "status": "yangi",
        "payment_method": None,
        "payment_status": "kutilmoqda",
        "timestamp": datetime.now().isoformat()
    }
    
    # Savatni tozalash
    user_data[chat_id]["cart"] = []
    
    # To'lov usulini so'rash
    request_payment_method(chat_id)

def send_order_to_admin(order_id):
    """Buyurtmani adminga yuborish"""
    order = orders_data[order_id]
    user_id = order["user_id"]
    user_phone = order["user_phone"]
    user_location = order["user_location"]
    location_type = order["location_type"]
    
    # Xarita linklarini yaratish
    maps_links = ""
    if location_type == "google_maps":
        if "http" not in user_location and "maps" not in user_location:
            google_maps_link = f"https://maps.google.com/?q={user_location}"
        else:
            google_maps_link = user_location
        maps_links = f"üìç <a href='{google_maps_link}'>Google Maps</a>"
    
    elif location_type == "yandex_maps":
        if "http" not in user_location and "yandex" not in user_location:
            yandex_maps_link = f"https://yandex.com/maps/?text={user_location}"
        else:
            yandex_maps_link = user_location
        maps_links = f"üåê <a href='{yandex_maps_link}'>Yandex Maps</a>"
    
    else:
        # Matn manzil uchun ikkala xarita linki
        google_maps_link = f"https://maps.google.com/?q={user_location}"
        yandex_maps_link = f"https://yandex.com/maps/?text={user_location}"
        maps_links = f"üìç <a href='{google_maps_link}'>Google Maps</a> | üåê <a href='{yandex_maps_link}'>Yandex Maps</a>"
    
    payment_method = order.get("payment_method", "Tanlanmagan")
    payment_status = order.get("payment_status", "kutilmoqda")
    
    admin_text = f"""
üÜï <b>YANGI BUYURTMA</b> #{order_id}

üë§ Mijoz ID: {user_id}
üìû Telefon: {user_phone}
üìç Manzil: {user_location}
üó∫Ô∏è Xarita: {maps_links}
üíµ Mahsulotlar: {order['total']:,} so'm
üéÅ Chegirma ({DISCOUNT_PERCENT}%): -{order['discount_amount']:,} so'm
üí≥ Chegirma bilan: {order['total_with_discount']:,} so'm
üöö Yetkazish: {DELIVERY_PRICE:,} so'm
üí∞ Jami: {order['total_with_delivery']:,} so'm
üí≥ To'lov usuli: {payment_method}
üîÑ To'lov holati: {payment_status}
‚è∞ Vaqt: {datetime.now().strftime('%H:%M')}

üì¶ <b>Buyurtma tarkibi:</b>
"""
    for item in order["items"]:
        admin_text += f"‚Ä¢ {item['name']} - {item['price']:,} so'm\n"
    
    admin_keyboard = {
        "inline_keyboard": [
            [{"text": "‚úÖ Qabul qilish", "callback_data": f"accept_{order_id}"}],
            [{"text": "‚ùå Bekor qilish", "callback_data": f"cancel_{order_id}"}],
            [{"text": "‚úÖ Buyurtma Tayyor", "callback_data": f"ready_{order_id}"}],
            [{"text": "üìû Bog'lanish", "callback_data": f"contact_{order_id}"}]
        ]
    }
    
    send_message(ADMIN_ID, admin_text, admin_keyboard)

def handle_callback(chat_id, callback_data):
    """Callbacklarni qayta ishlash"""
    try:
        if callback_data.startswith("add_"):
            product_id = int(callback_data.split("_")[1])
            add_to_cart(chat_id, product_id)
            
        elif callback_data == "view_cart":
            show_cart(chat_id)
            
        elif callback_data == "place_order":
            process_order(chat_id)
            
        elif callback_data == "clear_cart":
            if chat_id in user_data:
                user_data[chat_id]["cart"] = []
            send_message(chat_id, "üóë Savat tozalandi", main_menu(chat_id))
            
        elif callback_data == "show_menu":
            show_full_menu(chat_id)
            
        elif callback_data == "main_menu":
            send_message(chat_id, "üè† Asosiy menyu", main_menu(chat_id))
            
        elif callback_data.startswith("payment_done_"):
            order_id = int(callback_data.split("_")[2])
            text = f"""
‚úÖ <b>TO'LOV MA'LUMOTLARI QABUL QILINDI</b>

üì¶ Buyurtma raqami: #{order_id}
üí≥ Iltimos, to'lov chekini @{ADMIN_ID} ga yuboring.

‚è≥ To'lov tasdiqlangandan so'ng buyurtmangiz tayyorlanadi.
üìû Bog'lanish: +998 91 211 12 15
            """
            send_message(chat_id, text, main_menu(chat_id))
            
        elif callback_data.startswith("accept_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    orders_data[order_id]["status"] = "qabul_qilindi"
                    user_id = orders_data[order_id]["user_id"]
                    send_message(user_id, f"‚úÖ #{order_id} buyurtmangiz qabul qilindi va tayyorlanmoqda!")
                    send_message(chat_id, f"‚úÖ #{order_id} buyurtma qabul qilindi")
            
        elif callback_data.startswith("ready_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    orders_data[order_id]["status"] = "tayyor"
                    user_id = orders_data[order_id]["user_id"]
                    send_message(user_id, f"üéâ #{order_id} buyurtmangiz tayyor! Yetkazib berishmoqda...")
                    send_message(chat_id, f"‚úÖ #{order_id} buyurtma tayyor deb belgilandi")
            
        elif callback_data.startswith("cancel_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    orders_data[order_id]["status"] = "bekor_qilindi"
                    user_id = orders_data[order_id]["user_id"]
                    send_message(user_id, f"‚ùå #{order_id} buyurtmangiz bekor qilindi. Iltimos, qaytadan urinib ko'ring.")
                    send_message(chat_id, f"‚ùå #{order_id} buyurtma bekor qilindi")
            
        elif callback_data.startswith("contact_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[1])
                if order_id in orders_data:
                    user_id = orders_data[order_id]["user_id"]
                    user_phone = orders_data[order_id]["user_phone"]
                    send_message(chat_id, f"üìû Buyurtma #{order_id} mijoz telefon raqami: {user_phone}")
            
        elif callback_data.startswith("cash_paid_"):
            if str(chat_id) == ADMIN_ID:
                order_id = int(callback_data.split("_")[2])
                if order_id in orders_data:
                    orders_data[order_id]["payment_status"] = "to'langan"
                    orders_data[order_id]["status"] = "qabul_qilindi"
                    user_id = orders_data[order_id]["user_id"]
                    send_message(user_id, f"‚úÖ #{order_id} buyurtmangiz uchun to'lov qabul qilindi va tayyorlanmoqda!")
                    send_message(chat_id, f"‚úÖ #{order_id} buyurtma to'lovi tasdiqlandi")
                    
    except Exception as e:
        print(f"Callback xatosi: {e}")
        send_message(chat_id, "‚ùå Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")

# ==================== UPTIME ROBOT ====================

def keep_alive():
    """UptimeRobot uchun keep-alive"""
    try:
        requests.get("https://tokiosushibot.onrender.com/health", timeout=5)
        print("üîÑ Keep-alive signal sent")
    except:
        print("‚ö†Ô∏è Keep-alive failed")

def start_keep_alive():
    """Keep-alive ni ishga tushirish"""
    schedule.every(10).minutes.do(keep_alive)
    while True:
        schedule.run_pending()
        time.sleep(1)

@app.route('/')
def home():
    return "üéå TOKIO SUSHI PREMIUM BOT - 24/7 Faol"

@app.route('/health')
def health_check():
    return {"status": "healthy", "service": "Tokio Sushi Premium Bot", "timestamp": datetime.now().isoformat()}

@app.route('/ping')
def ping():
    return "pong"

# ==================== ASOSIY BOT LOGIKASI ====================

def run_bot():
    print("üöÄ Tokio Sushi Premium Bot ishga tushdi!")
    
    last_update_id = None
    while True:
        try:
            response = requests.get(BASE_URL + "getUpdates", {
                "offset": last_update_id,
                "timeout": 30
            }, timeout=10)
            
            if response.status_code == 200:
                data = response.json()
                if data.get("ok") and data.get("result"):
                    for update in data["result"]:
                        last_update_id = update["update_id"] + 1
                        
                        if "message" in update:
                            chat_id = update["message"]["chat"]["id"]
                            message = update["message"]
                            text = message.get("text", "")
                            
                            if text == "/start":
                                welcome_text = f"""
üéå <b>TOKIO SUSHI PREMIUM</b> üç±

üèÆ <b>Xush kelibsiz! Premium yapon oshxonasi</b>
‚≠ê 90 ta mahsulot
üöö Tezkor yetkazib berish
üéÅ <b>HAR BIR BUYURTMAGA {DISCOUNT_PERCENT}% CHEGIRMA!</b>

üìû Bog'lanish: +998 91 211 12 15
                                """
                                send_message(chat_id, welcome_text, main_menu(chat_id))
                            
                            elif text == "üç± Premium Menyu":
                                show_full_menu(chat_id)
                            
                            elif text == "üõí Savat":
                                show_cart(chat_id)
                                
                            elif text == "üì¶ Mening buyurtmalarim":
                                user_orders = [order for order in orders_data.values() if order["user_id"] == chat_id]
                                if user_orders:
                                    text = "üì¶ <b>SIZNING BUYURTMALARINGIZ</b>\n\n"
                                    for order in user_orders[-5:]:
                                        status_emoji = "‚úÖ" if order["status"] == "tayyor" else "‚è≥" if order["status"] == "qabul_qilindi" else "‚ùå"
                                        text += f"{status_emoji} #{list(orders_data.keys())[list(orders_data.values()).index(order)]} - {order['total_with_delivery']:,} so'm - {order['status']}\n"
                                    send_message(chat_id, text)
                                else:
                                    send_message(chat_id, "üì¶ Siz hali buyurtma bermagansiz")
                            
                            elif text == "‚ÑπÔ∏è Ma'lumot":
                                info_text = f"""
üèÆ <b>TOKIO SUSHI</b> üéå

‚≠ê Premium yapon oshxonasi
üïí Ish vaqti: {WORK_HOURS}
üöö Yetkazib berish: {PREPARATION_TIME}
üí∞ Yetkazish narxi: {DELIVERY_PRICE:,} so'm
üéÅ <b>Har bir buyurtmaga {DISCOUNT_PERCENT}% chegirma!</b>

üìû Bog'lanish: +998 91 211 12 15
üìç Manzil: Qarshi shahar 
                                """
                                send_message(chat_id, info_text)
                            
                            elif text == "üëë Admin Panel" and str(chat_id) == ADMIN_ID:
                                today_orders = len([o for o in orders_data.values() if datetime.fromisoformat(o['timestamp']).date() == datetime.now().date()])
                                admin_text = f"""
üëë <b>ADMIN PANEL</b>

üìä Bugun buyurtmalar: {today_orders} ta
üë• Jami mijozlar: {len(user_data)} ta
üí∞ Jami buyurtmalar: {len(orders_data)} ta
üïí Vaqt: {datetime.now().strftime('%H:%M')}
                                """
                                send_message(chat_id, admin_text)
                            
                            elif text == "‚¨ÖÔ∏è Asosiy menyu" or text == "üè† Asosiy menyu":
                                send_message(chat_id, "üè† Asosiy menyu", main_menu(chat_id))
                            
                            # To'lov usullari
                            elif text == "üí≥ Karta orqali to'lash":
                                # Oxirgi buyurtmani topish
                                user_orders = [order_id for order_id, order in orders_data.items() if order["user_id"] == chat_id and order["status"] == "yangi"]
                                if user_orders:
                                    last_order_id = max(user_orders)
                                    orders_data[last_order_id]["payment_method"] = "karta"
                                    show_card_payment(chat_id, last_order_id)
                                    send_order_to_admin(last_order_id)
                                else:
                                    send_message(chat_id, "‚ùå Aktiv buyurtma topilmadi")
                            
                            elif text == "üíµ Naqd pul":
                                # Oxirgi buyurtmani topish
                                user_orders = [order_id for order_id, order in orders_data.items() if order["user_id"] == chat_id and order["status"] == "yangi"]
                                if user_orders:
                                    last_order_id = max(user_orders)
                                    orders_data[last_order_id]["payment_method"] = "naqd"
                                    confirm_cash_payment(chat_id, last_order_id)
                                    send_order_to_admin(last_order_id)
                                else:
                                    send_message(chat_id, "‚ùå Aktiv buyurtma topilmadi")
                            
                            # Telefon qabul qilish
                            elif "contact" in message:
                                contact = message["contact"]
                                phone = contact.get("phone_number", "")
                                
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["phone"] = phone
                                send_message(chat_id, f"‚úÖ Telefon raqamingiz qabul qilindi: {phone}")
                                request_location(chat_id)
                            
                            # Google Maps lokatsiya qabul qilish
                            elif "location" in message:
                                location = message["location"]
                                lat = location["latitude"]
                                lon = location["longitude"]
                                maps_url = f"https://maps.google.com/?q={lat},{lon}"
                                
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["location"] = maps_url
                                user_data[chat_id]["location_type"] = "google_maps"
                                send_message(chat_id, f"‚úÖ Manzilingiz qabul qilindi!\nüìç Google Maps")
                                
                                if "cart" in user_data[chat_id] and user_data[chat_id]["cart"]:
                                    send_message(chat_id, "‚úÖ Endi buyurtma berishingiz mumkin! \"üõí Savat\" tugmasini bosing.", main_menu(chat_id))
                            
                            # Yandex Maps linkini qabul qilish
                            elif text == "üåê Yandex Maps linkini yuborish":
                                send_message(chat_id, "üåê Iltimos, Yandex Maps linkinigizni yuboring:")
                            
                            # Xarita linklarini qabul qilish
                            elif "maps.google.com" in text or "goo.gl/maps" in text:
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["location"] = text
                                user_data[chat_id]["location_type"] = "google_maps"
                                send_message(chat_id, f"‚úÖ Google Maps manzilingiz qabul qilindi!")
                                
                                if "cart" in user_data[chat_id] and user_data[chat_id]["cart"]:
                                    send_message(chat_id, "‚úÖ Endi buyurtma berishingiz mumkin! \"üõí Savat\" tugmasini bosing.", main_menu(chat_id))
                            
                            elif "yandex" in text and "maps" in text:
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["location"] = text
                                user_data[chat_id]["location_type"] = "yandex_maps"
                                send_message(chat_id, f"‚úÖ Yandex Maps manzilingiz qabul qilindi!")
                                
                                if "cart" in user_data[chat_id] and user_data[chat_id]["cart"]:
                                    send_message(chat_id, "‚úÖ Endi buyurtma berishingiz mumkin! \"üõí Savat\" tugmasini bosing.", main_menu(chat_id))
                            
                            # Oddiy matn manzilni qabul qilish
                            elif text and len(text) > 10 and text not in ["üç± Premium Menyu", "üõí Savat", "üì¶ Mening buyurtmalarim", "‚ÑπÔ∏è Ma'lumot", "üëë Admin Panel", "üè† Asosiy menyu", "üí≥ Karta orqali to'lash", "üíµ Naqd pul"]:
                                if chat_id not in user_data:
                                    user_data[chat_id] = {}
                                user_data[chat_id]["location"] = text
                                user_data[chat_id]["location_type"] = "text"
                                send_message(chat_id, f"‚úÖ Manzilingiz qabul qilindi!\nüìç {text}")
                                
                                if "cart" in user_data[chat_id] and user_data[chat_id]["cart"]:
                                    send_message(chat_id, "‚úÖ Endi buyurtma berishingiz mumkin! \"üõí Savat\" tugmasini bosing.", main_menu(chat_id))
                        
                        elif "callback_query" in update:
                            callback = update["callback_query"]
                            chat_id = callback["message"]["chat"]["id"]
                            callback_data = callback["data"]
                            
                            handle_callback(chat_id, callback_data)
            
            time.sleep(1)
            
        except Exception as e:
            print(f"Xato: {e}")
            time.sleep(3)

if __name__ == "__main__":
    # Keep-alive ni ishga tushirish
    keep_alive_thread = Thread(target=start_keep_alive, daemon=True)
    keep_alive_thread.start()
    
    # Asosiy botni ishga tushirish
    bot_thread = Thread(target=run_bot, daemon=True)
    bot_thread.start()
    
    # Flask server
    port = int(os.environ.get("PORT", 10000))
    app.run(host='0.0.0.0', port=port, debug=False)
